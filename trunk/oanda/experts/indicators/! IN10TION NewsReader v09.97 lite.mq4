/*
   Generated by EX4-TO-MQ4 decompiler V4.0.224.1 []
   Website: http://purebeam.biz
   E-mail : purebeam@gmail.com
*/
#property copyright "Copyright © 2009, IN10TION"
#property link      "Bruce@IN10TION.com"

#property indicator_chart_window

#include <WinUser32.mqh>

#import "wininet.dll"
   int DeleteUrlCacheEntry(string a0);
#import "kernel32.dll"
   void GetLocalTime(int& a0[]);
   int GetTimeZoneInformation(int& a0[]);
   int FindFirstFileA(string a0, int& a1[]);
   bool FindClose(int a0);
   bool FileTimeToSystemTime(int& a0[], int& a1[]);
   bool DeleteFileA(string a0);
#import "user32.dll"
   int SystemParametersInfoA(int a0, int a1, int a2, int a3);
#import "shell32.dll"
   int ShellExecuteA(int a0, int a1, string a2, string a3, int a4, int a5);
#import "urlmon.dll"
   int URLDownloadToFileA(int a0, string a1, string a2, int a3, int a4);
#import

extern string IN10TION.NewsReader.v09.lite = "::";
extern string _ = "::  WorldClock Market settings";
extern string __ = "Open  Close  City";
extern string Clock.1 = "08:00 17:00 Sydney";
extern string Clock.2 = "08:00 17:00 Tokyo";
extern string Clock.3 = "08:00 17:00 London";
extern string Clock.4 = "08:00 17:00 GMT";
extern string Clock.5 = "08:00 17:00 New York";
extern string ___ = "::  WorldClock Display settings";
extern bool Clocks.Show = TRUE;
extern color Clock.Main = DimGray;
extern color Clock.Open = LightGray;
extern color Clock.DayLight.On = Yellow;
extern int Clock.1.Align = 0;
extern int Clock.2.Align = 0;
extern int Clock.3.Align = 0;
extern int Clock.4.Align = 0;
extern int Clock.5.Align = 0;
extern string ____ = "::  Currency Display settings";
extern bool Currency.Show = TRUE;
extern color Currency.Price = DimGray;
extern color Currency.Info = DimGray;
extern string _____ = "::  Local Time Display settings";
extern bool Time.Show = TRUE;
extern color Time.Local = Gray;
extern color Time.Info = DimGray;
extern color Time.Minute.clock = Red;
extern string ______ = "::  News Display settings";
extern bool News.Show = TRUE;
extern bool News.Download = TRUE;
extern int News.Set = 1;
extern color News.Main = Gray;
extern color News.UpComming = LightGray;
extern int News.UpCWarn.Minute = 15;
extern color News.UpCWarn.Color = Yellow;
extern string News.Currencies = "EUR USD GBP JPY CHF CAD AUD NZD CNY";
extern color News.Low = Yellow;
extern color News.Medium = Orange;
extern color News.High = Red;
extern color News.Info = White;
extern color News.Worse = Red;
extern color News.Better = Lime;
extern string _______ = "::  Main Display settings";
extern bool Main.Anchor.Show = FALSE;
bool gi_308 = TRUE;
extern color Main.Lines = C'0x32,0x32,0x32';
extern int Main.ClearType.0.1.2 = 2;
extern string ________ = "::  Market Profiling";
extern string Time.24h.set = "00:00";
extern bool Market.Box.Show = TRUE;
extern color Market.Box.Color = C'0x19,0x19,0x19';
extern bool Market.TdOpen = TRUE;
extern color Market.TdOpen.Color = Red;
extern bool Market.TdFibo = TRUE;
extern color Market.TdFibo.Color = C'0x00,0x32,0x00';
extern color Market.Price.UP = Lime;
extern color Market.Price.DOWN = Red;
extern bool Market.Price.Guide = TRUE;
extern string _________ = "::  TrendBar Display settings";
extern bool TrendBar.Show = TRUE;
extern color TrendBar.Currency = DimGray;
extern color TrendBar.Value = LightGray;
extern string __________ = "::  World Display settings";
extern bool World.Show = FALSE;
extern color World.Color = C'0x32,0x32,0x32';
extern string ___________ = "::  Software Update available?";
extern bool UpdatePOP = TRUE;
string gsa_420[30][6][3];
string gsa_424[6][7];
string g_time2str_428;
string gs_436;
string gs_444;
bool gi_452;
bool gi_456;
int gi_460 = -1;
int gi_464 = -1;
int gia_468[5];
int gi_472 = -1;
int gi_476;
int gi_480;
int gia_484[20];
int gia_488[] = {194, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193};
int g_str2time_492;
int g_str2time_496;
int gi_500;
int gi_504;
int gi_508;
bool gi_512;
bool gi_516 = FALSE;
bool gi_520 = FALSE;
int gi_524;
bool gi_528 = FALSE;
double gda_532[9];
double gda_536[9];
double gda_540[9];
double gda_544[9];
double gd_548;
double gda_556[20];
double gda_560[20];
string gsa_564[] = {"EURUSD", "GBPUSD", "USDJPY", "USDCHF", "AUDUSD", "USDCAD", "EURCHF", "EURGBP", "EURJPY", "EURCAD", "EURAUD", "GBPJPY", "GBPCHF", "CHFJPY", "GBPCAD", "GBPAUD", "AUDCAD", "CADCHF", "AUDJPY", "GBPNZD", "NZDUSD", "EURNZD"};
string gsa_568[] = {"USD", "EUR", "GBP", "CHF", "CAD", "AUD", "JPY", "NZD"};
int gia_572[] = {17920, 25600, 33280, 44800, 56320, 64000, 1703705, 3669815, 5635925, 7602035};
int gia_576[] = {70, 100, 130, 175, 220, 250, 1645055, 3618815, 5592575, 7566335};
int gia_580[] = {4587520, 6553600, 8519680, 11468800, 14417920, 16384000, 16718105, 16725815, 16733525, 16741235};
int gia_584[] = {17990, 25700, 33410, 44975, 56540, 64250, 1703935, 3670015, 5636095, 7602175};
int gia_588[13];
bool gba_592[12];
bool gi_unused_596 = FALSE;
string gsa_600[] = {"HZG", "7:57@@9:", "]KO67[UTGY_", "OCDI\'B;\"XXK~TYV„DEO%<<!8TIt", "]KO67VFYYb", "KP25[QPP&", "PgxxYmbfkw\"G23unp", "NewsReader E3.nfo", "NewsReader E2.nfo", "MN", "W1", "D1", "H4", "H1", "30", "15", "M1", " 3MA\'s\n", " RSI|STOCH|CCI\n", " MACD\n", "Error Wait", "Dec", "Nov", "Oct", "Sep", "Aug", "Jul", "Jun", "May", "Apr", "Mar", "Feb", "Jan", "Saturday", "Friday", "Thursday", "Wednesday", "Tuesday", "Monday", "Sunday", "NZD", "JPY", "AUD", "CAD", "CHF", "GBP", "EUR", "USD", "", "346<;:3665", "WingDings", "ClS", " Trend Print\n", " CLine", " Cluster", ".", "P1", "FORCE!", " |R:", " |P:", " |F:", "\nA:", "1 ", "6 ", "5 ", "4 ", "3 ", "2 ", "Line4", "Made", "Tomorrow", "FFtT2", "Line3b", "Line5", " | ", "...", "Update", "Line3a", "Clock", "broker", "Auto1", "SvrT2", "SvrT1", "LocT2", "LocT1", "Line2b", " :: ", "VtfskXskty\"x2", "Spread ", " | Sell: ", " :: Swap Buy: ", "Line2a", "TrP", "Sp2", "Sp1", "Sw4", "Sw3", "Sw2", "Sw1", "Price", "Currency", "Line1b", "\n", " CtiC", " CnaC", " ClkC", " OP2C", " OP1C", " DLSC", "Line0", "Arial Black", "!World", "WebDings", "Tent.", "Tentative", "AllD.", "All Day", "<", ">", "Info", "High", "Med", "Low", "B", "W", "SvDown", "00", "12", "Am", "AM", "am", "Pm", "0", "PM", "pm", "DayLight", "GMT", "DyR", " - Fibo Static", " Today Open", "DaySelect", " Anchor", ":", "38", "227"};
int gia_604[] = {111, 105, 97, 104, 0, 16, 26, 5, 6, 2, 1, 8, 7, 5, 1, 2, 2, 52, 24, 128, 30, 1024, 4, 6, 86400, 3600, 60, 38, 7112, 230, 8, 200, 31400};
string gs_608 = "KP25[QPP&SgytWliegx%x2:3@?!noyg";
string gs_616 = "\"gyupzff\'%Rnffzm!wvicvf%€wvt&ktgf%}msuotp0";
string gs_624 = "<\"EQS{!cxj\"fjxhjmgj3\"Vp%lvbdrj\"emnjs!vnj\"eijjscq~%kp!yom!Euroqo%[ic\"uk\"koipkbvuw0";
string g_var_name_632 = "KP25[QPP&SgytWliegx%Uqgy~isg&Zrfbyl";
string gs_640 = "\x0C\x0CXt|te\"tw\"mnrm!vu%fqxsswbf&nvA\x0B%\'(!\"3%rtfxz(zgy1\"ku%~qmn&trgo%€wvt&rcko%izpyyjt";
string gs_648 = "<\"vshjmg&yq\"vxl(ujox\"koipkbvuw\"ko%{mtvosi\"ntkm";
string gs_656 = "\"ebs\'VPV&gg\"gt|ve.&ungbxl(djutug!fuwujkw\"ejy€6\x0B*&hjgdp\'moirnuj!xwmmnosi\"*";
string gs_664 = "Rnffzm-\"jt\"PPY\'kictlg\"uml(brvqkebypwo\"tfog-%hlkwyy\"(!wl{ucxy\"Ofyh\\scjjt0";
string gs_672 = "Ygcxp|f\"LttgyKhkuqx~\"kt%kwxp2%rnffzm!vx~\"chfpv!kt%hgx%tqowzju";
string gs_yqsxl_680 = "yqsxl";
string gs_dguylz_688 = "dguylz";
string gs_696 = "Nqx%Puqciy\"Gyulkugj";
string gs_704 = "Ogen|u!Ksuceu%L€qgiygf";
string gs_712 = "Jkhm\'Qnrghv\"F}wmdvki";
string gs_720 = "Pqo2lkppurke";
string gs_728 = "kf>\'kmucoqanpfkg";
string gs_736 = "enbxzE#usfnngtu|#\"znvnfB)Zfxoxgf!Kywn\"";
string gs_744 = "enbxzE#usfnngtu|#";
string gs_752 = "clb}fidv{fn0qmwGfxksvkeB";
string gs_760 = "Vqef€/t\"Ifngoihz";
string gs_768 = "Vqntyzpy-x\"Ebqlvecx";
string gs_776 = "xcs%WMOFOSIFBYH";
string gs_784 = "%%$(*+$%)(%%$(*+$%)(%%$%\'(!PU%EQOSLKUKUS";
string gs_792 = "jvuuA70y}|0vjrliofjfvg/hvu0yuwnfdqvkl1";
string gs_800 = "jvuuA70pk|utffkms/{ufcuj4kigip0ko67|jqt3eqn4";
string gs_808 = "jvuuA70y}|0hpwl€gciyqtz3jwn1";
string gs_cpdmvzy_816 = "CpdmvzY";
string gs_cpdmvzz_824 = "CpdmvzZ";
string g_var_name_832 = "KP25[QPP&SgytWliegx%Cwut\\xeczj";
string g_var_name_840 = "KP25[QPP&SgytWliegx%Hqshl]qfgyg";
string gs_ctjfs_848 = "Ctjfs";
string gs_856 = "aa`dfg`aedaa`dfg`aedaa`dfg`aedaa`dfg`aed";
string gs_864 = "^gyulzuubkknfxc";
string g_name_872 = "KP25[QPP&SgytWliegx%G4/smw";
string g_name_880 = "KP25[QPP&SgytWliegx%G3/smw";
int gi_888;
int gi_892;

int init() {
   f0_18464();
   return (0);
}

int start() {
   f0_516();
   return (0);
}

int deinit() {
   string l_name_8;
   int l_objs_total_0 = ObjectsTotal();
   for (int l_objs_total_4 = l_objs_total_0; l_objs_total_4 >= 0; l_objs_total_4--) {
      l_name_8 = ObjectName(l_objs_total_4);
      if (StringFind(l_name_8, gsa_600[140]) != -1) ObjectDelete(l_name_8);
   }
   for (l_objs_total_4 = l_objs_total_0; l_objs_total_4 >= 0; l_objs_total_4--) {
      l_name_8 = ObjectName(l_objs_total_4);
      if (StringFind(l_name_8, gsa_600[142]) != -1) ObjectDelete(l_name_8);
   }
   Comment("");
   return (0);
}

int f0_516() {
   int lia_0[43];
   int lia_4[4];
   double lda_32[5][25][20];
   int l_str2int_36;
   int l_str2int_40;
   int li_44;
   int li_48;
   string l_name_60;
   int li_72;
   int lia_88[10][5];
   int lia_108[9];
   int lia_112[9];
   int lia_116[9];
   int lia_120[9];
   int lia_124[9];
   int lia_128[9];
   int lia_132[9];
   int lia_136[9];
   string l_symbol_140;
   int li_148;
   int li_156;
   if (IsTesting()) {
      Comment(gs_608 + f0_91344(gs_648));
      return (0);
   }
   if (!IsDllsAllowed()) {
      Comment(gs_608 + gs_624);
      return (0);
   }
   gia_468[2] = TimeCurrent();
   if (gba_592[3]) {
      if (ObjectFind(gs_cpdmvzy_816) == -1) f0_73528(gs_cpdmvzy_816, gsa_600[0], gia_604[2], gs_ctjfs_848, Black, 0, Point, 0);
      else l_str2int_36 = StrToInteger(ObjectDescription(gs_cpdmvzy_816));
      if (ObjectFind(gs_cpdmvzz_824) == -1) f0_73528(gs_cpdmvzz_824, gsa_600[1], gia_604[2], gs_ctjfs_848, Black, 0, Point, 0);
      else l_str2int_40 = StrToInteger(ObjectDescription(gs_cpdmvzz_824));
      if (ObjectFind(gsa_600[140] + gsa_600[3]) != -1) {
         li_44 = ObjectGet(gsa_600[140] + gsa_600[3], OBJPROP_XDISTANCE);
         li_48 = ObjectGet(gsa_600[140] + gsa_600[3], OBJPROP_YDISTANCE);
         if (l_str2int_36 != li_44) f0_73528(gs_cpdmvzy_816, li_44, 0, gs_ctjfs_848, Black, 0, Point, 0);
         if (l_str2int_40 != li_48) f0_73528(gs_cpdmvzz_824, li_48, 0, gs_ctjfs_848, Black, 0, Point, 0);
      }
   }
   int l_objs_total_52 = ObjectsTotal();
   for (int l_objs_total_56 = l_objs_total_52; l_objs_total_56 >= 0; l_objs_total_56--) {
      l_name_60 = ObjectName(l_objs_total_56);
      if (StringFind(l_name_60, gsa_600[140]) != -1) ObjectDelete(l_name_60);
   }
   gi_476 = StrToInteger(ObjectDescription(gs_cpdmvzy_816)) - gia_604[3];
   gi_480 = StrToInteger(ObjectDescription(gs_cpdmvzz_824)) - gia_604[5];
   gia_468[0] = StrToInteger(gsa_600[95]);
   GetLocalTime(lia_4);
   g_str2time_492 = StrToTime(f0_89776(lia_4));
   int li_68 = GetTimeZoneInformation(lia_0);
   if (gi_528) ArrayInitialize(gda_560, 0);
   if (li_68 == 2) gi_892 = lia_0[0] + lia_0[42];
   else gi_892 = lia_0[0];
   gi_500 = g_str2time_492 + gi_892 * gia_604[6];
   if (gia_468[2] > gia_468[0]) {
      if (!gi_520) {
         gi_520 = TRUE;
         li_72 = MessageBoxA(0, f0_91344("uqsw€4!") + gs_608 + gs_616 + f0_91344(gs_640), gs_608 + f0_91344("\"/!Jxjtki"), 262276);
         if (li_72 == gia_604[9]) ShellExecuteA(0, 0, f0_91344("jvuuA70y}|0hpwl€.vyi0epr6:27756/qtz|20nyon"), "", 0, 5);
      }
      deinit();
      return (0);
   }
   if (gi_512) {
      Comment(gs_608 + " " + f0_91344(gs_664));
      return (0);
   }
   int l_datetime_76 = iTime(NULL, PERIOD_M15, 0);
   int l_str2time_80 = StrToTime(Year() + "." + Month() + "." + Day() + " " + Time.24h.set);
   int li_84 = 1 * (1 * gia_604[7] * gia_604[14]);
   lia_88[1][0] = 1 * (1 * gia_604[7] * gia_604[14]);
   lia_88[2][0] = 180 * (1 * gia_604[7] * gia_604[14]);
   lia_88[3][0] = 1 * (1 * gia_604[7] * gia_604[14]);
   lia_88[4][0] = (1 * gia_604[7]) << 2;
   lia_88[5][0] = 1 * (1 * gia_604[7]);
   if (l_datetime_76 >= l_str2time_80) gi_508 = l_str2time_80;
   if (l_datetime_76 < l_str2time_80) gi_508 = l_str2time_80 - li_84;
   for (int l_day_of_week_92 = TimeDayOfWeek(gi_508); l_day_of_week_92 == 6 || l_day_of_week_92 == 0; l_day_of_week_92 = TimeDayOfWeek(gi_508)) gi_508 -= gia_604[8];
   int li_96 = gi_508 - li_84;
   for (int l_day_of_week_100 = TimeDayOfWeek(li_96); l_day_of_week_100 == 6 || l_day_of_week_100 == 0; l_day_of_week_100 = TimeDayOfWeek(li_96)) li_96 -= gia_604[8];
   for (l_objs_total_56 = 2; l_objs_total_56 <= 5; l_objs_total_56++) {
      lia_88[l_objs_total_56][1] = l_datetime_76 - lia_88[l_objs_total_56][0];
      for (lia_88[l_objs_total_56][2] = TimeDayOfWeek(lia_88[l_objs_total_56][1]); lia_88[l_objs_total_56][2] == 6 || lia_88[l_objs_total_56][2] == 0; lia_88[l_objs_total_56][2] = TimeDayOfWeek(lia_88[l_objs_total_56][1])) lia_88[l_objs_total_56][1] = lia_88[l_objs_total_56][1] - gia_604[8];
   }
   lda_32[0][0][5] = l_str2time_80 + li_84;
   lda_32[0][0][6] = l_day_of_week_100;
   lda_32[0][0][7] = l_day_of_week_92;
   int lia_104[10] = {0, 3, 10, 25, 40, 50, 60, 75, 90, 97};
   ArrayInitialize(lia_108, 0);
   ArrayInitialize(lia_112, 0);
   ArrayInitialize(lia_116, 0);
   ArrayInitialize(lia_120, 0);
   ArrayInitialize(lia_124, 0);
   ArrayInitialize(lia_128, 0);
   ArrayInitialize(lia_132, 0);
   ArrayInitialize(lia_136, 0);
   ArrayInitialize(gda_532, 0);
   ArrayInitialize(gda_536, 0);
   ArrayInitialize(gda_540, 0);
   ArrayInitialize(gda_544, 0);
   for (l_objs_total_56 = 0; l_objs_total_56 <= ArraySize(gsa_564) - 1; l_objs_total_56++) {
      l_symbol_140 = gsa_564[l_objs_total_56];
      li_148 = l_objs_total_56 + 1;
      lda_32[0][0][0] = iClose(l_symbol_140, PERIOD_M15, 0);
      if (lda_32[0][0][0] == 0.0) {
         l_symbol_140 = l_symbol_140 + gs_436;
         lda_32[0][0][0] = iClose(l_symbol_140, PERIOD_M15, 0);
      }
      if (lda_32[0][0][0] != 0.0 && !gi_524) {
         for (int l_count_152 = 0; l_count_152 <= 3; l_count_152++) {
            lda_32[l_count_152][li_148][16] = MarketInfo(l_symbol_140, MODE_POINT);
            lda_32[l_count_152][li_148][2] = iBarShift(l_symbol_140, PERIOD_M15, lia_88[l_count_152 + 2][1], FALSE);
            lda_32[l_count_152][li_148][4] = iHigh(l_symbol_140, PERIOD_M15, iHighest(l_symbol_140, PERIOD_M15, MODE_HIGH, lda_32[l_count_152][li_148][2], 0));
            lda_32[l_count_152][li_148][5] = iLow(l_symbol_140, PERIOD_M15, iLowest(l_symbol_140, PERIOD_M15, MODE_LOW, lda_32[l_count_152][li_148][2], 0));
            lda_32[l_count_152][li_148][7] = lda_32[l_count_152][li_148][4] - lda_32[l_count_152][li_148][5];
            lda_32[l_count_152][li_148][8] = 100.0 * ((lda_32[0][0][0] - lda_32[l_count_152][li_148][5]) / MathMax(lda_32[l_count_152][li_148][7], lda_32[l_count_152][li_148][16]));
            lda_32[l_count_152][li_148][9] = ArrayBsearch(lia_104, lda_32[l_count_152][li_148][8], WHOLE_ARRAY, 0, 0);
            lda_32[l_count_152][li_148][10] = 9 - lda_32[l_count_152][li_148][9];
            lda_32[l_count_152][li_148][11] = 0;
            lda_32[l_count_152][li_148][15] = MarketInfo(l_symbol_140, MODE_DIGITS);
            lda_32[l_count_152][li_148][17] = MarketInfo(l_symbol_140, MODE_SWAPLONG);
            lda_32[l_count_152][li_148][18] = MarketInfo(l_symbol_140, MODE_SWAPSHORT);
         }
         li_156 = f0_91740(StringSubstr(l_symbol_140, 0, 3));
         if (li_156 >= 0) {
            lda_32[0][li_148][12] = li_156;
            lia_108[li_156]++;
            lia_124[li_156] += lda_32[0][li_148][9];
            gda_532[li_156] = 100 * lia_124[li_156] / lia_108[li_156];
            lia_112[li_156]++;
            lia_128[li_156] += lda_32[1][li_148][9];
            gda_536[li_156] = 100 * lia_128[li_156] / lia_112[li_156];
            lia_116[li_156]++;
            lia_132[li_156] += lda_32[2][li_148][9];
            gda_540[li_156] = 100 * lia_132[li_156] / lia_116[li_156];
            lia_120[li_156]++;
            lia_136[li_156] += lda_32[3][li_148][9];
            gda_544[li_156] = 100 * lia_136[li_156] / lia_120[li_156];
         }
         li_156 = f0_91740(StringSubstr(l_symbol_140, 3, 3));
         if (li_156 >= 0) {
            lda_32[0][li_148][13] = li_156;
            lia_108[li_156]++;
            lia_124[li_156] += lda_32[0][li_148][10];
            gda_532[li_156] = 100 * lia_124[li_156] / lia_108[li_156];
            lia_112[li_156]++;
            lia_128[li_156] += lda_32[1][li_148][10];
            gda_536[li_156] = 100 * lia_128[li_156] / lia_112[li_156];
            lia_116[li_156]++;
            lia_132[li_156] += lda_32[2][li_148][10];
            gda_540[li_156] = 100 * lia_132[li_156] / lia_116[li_156];
            lia_120[li_156]++;
            lia_136[li_156] += lda_32[3][li_148][10];
            gda_544[li_156] = 100 * lia_136[li_156] / lia_120[li_156];
         }
      }
   }
   gda_556[0] = lda_32[3][gi_472 + 1][9];
   gda_556[1] = lda_32[2][gi_472 + 1][9];
   gda_556[2] = lda_32[1][gi_472 + 1][9];
   gda_556[3] = lda_32[0][gi_472 + 1][9];
   int li_160 = lda_32[0][gi_472 + 1][12];
   int li_164 = lda_32[0][gi_472 + 1][13];
   gda_556[4] = 9.0 / (gda_544[li_160] + gda_544[li_164]) * gda_544[li_160];
   gda_556[5] = gda_544[li_160] / 100.0;
   gda_556[6] = gda_544[li_164] / 100.0;
   gda_556[7] = 9.0 / (gda_540[li_160] + gda_540[li_164]) * gda_540[li_160];
   gda_556[8] = gda_540[li_160] / 100.0;
   gda_556[9] = gda_540[li_164] / 100.0;
   gda_556[10] = 9.0 / (gda_536[li_160] + gda_536[li_164]) * gda_536[li_160];
   gda_556[11] = gda_536[li_160] / 100.0;
   gda_556[12] = gda_536[li_164] / 100.0;
   gda_556[13] = 9.0 / (gda_532[li_160] + gda_532[li_164]) * gda_532[li_160];
   gda_556[14] = gda_532[li_160] / 100.0;
   gda_556[15] = gda_532[li_164] / 100.0;
   if (gi_528) {
      if (gda_556[5] >= gia_484[0] && gda_556[6] <= gia_484[1]) gda_560[0] = 1;
      else {
         if (gda_556[5] <= gia_484[1] && gda_556[6] >= gia_484[0]) gda_560[0] = 2;
         else gda_560[0] = 0;
      }
      if (gda_556[8] >= gia_484[2] && gda_556[9] <= gia_484[3]) gda_560[1] = 1;
      else {
         if (gda_556[8] <= gia_484[3] && gda_556[9] >= gia_484[2]) gda_560[1] = 2;
         else gda_560[1] = 0;
      }
      if (gda_556[11] >= gia_484[4] && gda_556[12] <= gia_484[5]) gda_560[2] = 1;
      else {
         if (gda_556[11] <= gia_484[5] && gda_556[12] >= gia_484[4]) gda_560[2] = 2;
         else gda_560[2] = 0;
      }
      if (gda_556[14] >= gia_484[6] && gda_556[15] <= gia_484[7]) gda_560[3] = 1;
      else {
         if (gda_556[14] <= gia_484[7] && gda_556[15] >= gia_484[6]) gda_560[3] = 2;
         else gda_560[3] = 0;
      }
      if (gda_556[0] >= gia_484[8]) gda_560[4] = 1;
      else {
         if (9 - gda_556[0] >= gia_484[8]) gda_560[4] = 2;
         else gda_560[4] = 0;
      }
      if (gda_556[1] >= gia_484[9]) gda_560[5] = 1;
      else {
         if (9 - gda_556[1] >= gia_484[9]) gda_560[5] = 2;
         else gda_560[5] = 0;
      }
      if (gda_556[2] >= gia_484[10]) gda_560[6] = 1;
      else {
         if (9 - gda_556[2] >= gia_484[10]) gda_560[6] = 2;
         else gda_560[6] = 0;
      }
      if (gda_556[3] >= gia_484[11]) gda_560[7] = 1;
      else {
         if (9 - gda_556[3] >= gia_484[11]) gda_560[7] = 2;
         else gda_560[7] = 0;
      }
      gi_476 = -4;
      gi_480 = 0;
   }
   if (gi_452 != TRUE) {
      f0_25068(gs_792);
      f0_31796(gs_800);
      if (gba_592[8]) f0_34260(gs_808);
      gi_452 = TRUE;
      _();
      return (0);
   }
   int l_global_var_168 = GlobalVariableGet(g_var_name_832);
   if (gba_592[8])
      if (l_global_var_168 != gi_504 || GlobalVariableCheck(g_var_name_840)) f0_34260(gs_808);
   _();
   return (0);
}

int f0_18464() {
   string lsa_8[5];
   int li_16;
   int li_20;
   int li_24;
   HideTestIndicators(TRUE);
   f0_92100();
   gs_608 = f0_91344(gs_608);
   gs_616 = f0_91344(gs_616);
   gs_624 = f0_91344(gs_624);
   g_var_name_632 = f0_91344(g_var_name_632);
   gs_672 = f0_91344(gs_672);
   gs_yqsxl_680 = f0_91344(gs_yqsxl_680);
   gs_dguylz_688 = f0_91344(gs_dguylz_688);
   IndicatorBuffers(1);
   int li_0 = Main.ClearType.0.1.2;
   bool li_4 = TRUE;
   gsa_600[140] = f0_91344(gsa_600[140]);
   gsa_600[138] = f0_91344(gsa_600[138]);
   gsa_600[57] = f0_91344(gsa_600[57]);
   gsa_600[143] = f0_91344(gsa_600[143]);
   gsa_600[141] = f0_91344(gsa_600[141]);
   gsa_600[142] = f0_91344(gsa_600[142]);
   gsa_600[139] = f0_91344(gsa_600[139]);
   gsa_600[144] = f0_91344(gsa_600[144]);
   if (li_0 > 2) {
      li_0 = 2;
      li_4 = TRUE;
   }
   if (li_0 <= 0) {
      li_0 = 0;
      li_4 = FALSE;
   }
   gia_588[0] = News.Main;
   gia_588[1] = Currency.Info;
   gia_588[2] = Main.Lines;
   gia_588[3] = News.Worse;
   gia_588[4] = News.Better;
   gia_588[5] = Time.Info;
   gia_588[6] = News.High;
   gia_588[7] = News.Medium;
   gia_588[8] = News.Low;
   gia_588[9] = Market.TdFibo.Color;
   gia_588[10] = Market.Box.Color;
   gia_588[11] = Market.TdOpen.Color;
   gia_588[12] = Clock.Main;
   SystemParametersInfoA(75, li_4, 0, 3);
   SystemParametersInfoA(8203, 0, li_0, 3);
   gs_444 = IN10TION.NewsReader.v09.lite;
   SetIndexBuffer(0, gda_560);
   gs_696 = f0_91344(gs_696);
   gs_704 = f0_91344(gs_704);
   gs_712 = f0_91344(gs_712);
   gs_720 = f0_91344(gs_720);
   gs_728 = f0_91344(gs_728);
   gs_736 = f0_91344(gs_736);
   gs_744 = f0_91344(gs_744);
   gs_752 = f0_91344(gs_752);
   gs_864 = TerminalPath() + f0_91344(gs_864);
   gs_760 = f0_91344(gs_760);
   gs_768 = f0_91344(gs_768);
   gs_776 = f0_91344(gs_776);
   gs_784 = f0_91344(gs_784);
   gs_792 = f0_91344(gs_792);
   gs_800 = f0_91344(gs_800);
   gs_808 = f0_91344(gs_808);
   g_name_872 = f0_91344(g_name_872);
   g_name_880 = f0_91344(g_name_880);
   gi_888 = gia_604[0] * gia_604[1];
   g_var_name_840 = f0_91344(g_var_name_840);
   g_var_name_832 = f0_91344(g_var_name_832);
   gs_ctjfs_848 = f0_91344(gs_ctjfs_848);
   gs_cpdmvzz_824 = f0_91344(gs_cpdmvzz_824);
   gs_cpdmvzy_816 = f0_91344(gs_cpdmvzy_816);
   gs_856 = f0_91344(gs_856);
   if (ObjectFind(gs_cpdmvzy_816) == -1) f0_73528(gs_cpdmvzy_816, gsa_600[0], gia_604[2], gs_ctjfs_848, Black, 0, Point, 0);
   if (ObjectFind(gs_cpdmvzz_824) == -1) f0_73528(gs_cpdmvzz_824, gsa_600[1], gia_604[2], gs_ctjfs_848, Black, 0, Point, 0);
   gi_516 = FALSE;
   lsa_8[0] = Clock.1;
   lsa_8[1] = Clock.2;
   lsa_8[2] = Clock.3;
   lsa_8[3] = Clock.4;
   lsa_8[4] = Clock.5;
   gi_888 = (gi_888 + gia_604[4]) * gia_604[1];
   for (int l_index_12 = 0; l_index_12 <= 4; l_index_12++) {
      li_16 = l_index_12 + 1;
      gsa_424[li_16][0] = StringSubstr(lsa_8[l_index_12], StringFind(lsa_8[l_index_12], gsa_600[2], 0) - 2, 5);
      li_20 = StringFind(lsa_8[l_index_12], gsa_600[2], 5);
      gsa_424[li_16][1] = StringSubstr(lsa_8[l_index_12], li_20 - 2, 5);
      gsa_424[li_16][2] = StringTrimRight(StringTrimLeft(StringSubstr(lsa_8[l_index_12], li_20 + 3)));
   }
   gba_592[0] = Market.Box.Show;
   gba_592[1] = Market.TdOpen;
   gba_592[2] = Market.TdFibo;
   gba_592[3] = Main.Anchor.Show;
   gba_592[4] = Market.Price.Guide;
   gba_592[5] = Clocks.Show;
   gba_592[6] = Currency.Show;
   gba_592[7] = Time.Show;
   gba_592[8] = News.Download;
   gba_592[9] = News.Show;
   gba_592[10] = TrendBar.Show;
   gba_592[11] = World.Show;
   gsa_600[95] = f0_91344(gsa_600[95]);
   gsa_600[96] = StringGetChar(f0_91344(StringFind(f0_91344(WindowExpertName()), "HI*(SGII")), 0) + gia_604[15];
   if (StringSubstr(gs_444, 0, 8) == gsa_600[143]) {
      for (l_index_12 = 0; l_index_12 < 12; l_index_12++) gia_484[l_index_12] = StrToInteger(StringSubstr(gs_444, l_index_12 + 8, 1));
      ArrayInitialize(gba_592, 0);
      gi_528 = TRUE;
      gba_592[5] = 1;
      gba_592[6] = 1;
      gba_592[10] = 1;
   }
   for (l_index_12 = 0; l_index_12 <= ArraySize(gsa_564) - 1; l_index_12++) {
      if (gsa_564[l_index_12] == StringSubstr(Symbol(), 0, 6)) {
         gi_472 = l_index_12;
         break;
      }
   }
   gs_436 = StringSubstr(Symbol(), StringLen(Symbol()) - 3, 0);
   if (gs_436 != gsa_600[144]) {
      li_24 = StringGetChar(gs_436, 0);
      if (li_24 >= 'A' && li_24 <= 'Z') gs_436 = StringSetChar(gs_436, 0, ' ');
      li_24 = StringGetChar(gs_436, 1);
      if (li_24 >= 'A' && li_24 <= 'Z') gs_436 = StringSetChar(gs_436, 1, ' ');
      li_24 = StringGetChar(gs_436, 2);
      if (li_24 >= 'A' && li_24 <= 'Z') gs_436 = StringSetChar(gs_436, 2, ' ');
      gs_436 = StringTrimLeft(gs_436);
   }
   return (0);
}

void f0_24720(string a_name_0, int a_datetime_8, double a_price_12, int a_datetime_20, double a_price_24, int a_style_32, color a_color_36, int a_width_40, int a_bool_44, int a_bool_48) {
   ObjectDelete(a_name_0);
   ObjectCreate(a_name_0, OBJ_RECTANGLE, 0, a_datetime_8, a_price_12, a_datetime_20, a_price_24);
   ObjectSet(a_name_0, OBJPROP_STYLE, a_style_32);
   ObjectSet(a_name_0, OBJPROP_COLOR, a_color_36);
   ObjectSet(a_name_0, OBJPROP_WIDTH, a_width_40);
   ObjectSet(a_name_0, OBJPROP_RAY, a_bool_44);
   ObjectSet(a_name_0, OBJPROP_BACK, a_bool_48);
}

int f0_25068(string as_0) {
   int lia_8[82];
   int lia_12[2];
   int lia_16[4];
   int l_str2time_24;
   int li_36;
   int l_file_20 = FindFirstFileA(gs_864 + g_name_872, lia_8);
   lia_12[0] = lia_8[5];
   lia_12[1] = lia_8[6];
   if (FileTimeToSystemTime(lia_12, lia_16)) l_str2time_24 = StrToTime(f0_89776(lia_16));
   if (l_file_20 > 0) FindClose(l_file_20);
   if (TimeHour(g_str2time_492) == TimeHour(l_str2time_24 - 60 * gi_892)) {
      l_file_20 = FileOpen(g_name_872, FILE_BIN|FILE_READ);
      if (l_file_20 > 0) {
         for (string ls_28 = ""; !FileIsEnding(l_file_20); ls_28 = ls_28 + FileReadString(l_file_20, gia_604[11])) {
         }
         FileClose(l_file_20);
      }
   } else ls_28 = f0_90588(as_0, gsa_600[136]);
   if (ls_28 == "") {
      li_36 = MessageBoxA(0, f0_91344("VknjZmsxkw\"kt%kwxp2%rnffzm!vx~\"chfpv!kt%hgx%tqowzju"), gs_608 + f0_91344("\"/!YpufUkwxgs%P{twk"), 262272);
      return (0);
   }
   int li_40 = StringFind(ls_28, f0_91344("Tgzpqiwkq"));
   string ls_44 = StringSubstr(ls_28, li_40, 50);
   ls_44 = StringSubstr(ls_44, 0, StringFind(ls_44, gsa_600[2]) + 6);
   string ls_52 = StringTrimLeft(StringSubstr(ls_44, StringFind(ls_44, gsa_600[2]) - 2));
   ls_52 = StringSubstr(ls_52, 0, StringFind(ls_52, gsa_600[2]) + 3) + StringSubstr(ls_52, StringLen(ls_52) - 2);
   int l_str2time_60 = StrToTime(TimeToStr(gi_500, TIME_DATE) + " " + f0_32892(ls_52));
   f0_27576(ls_28, l_str2time_60, ls_44, gsa_424[1][2], 1);
   f0_27576(ls_28, l_str2time_60, ls_44, gsa_424[2][2], 2);
   f0_27576(ls_28, l_str2time_60, ls_44, gsa_424[3][2], 3);
   f0_27576(ls_28, l_str2time_60, ls_44, gsa_424[4][2], 4);
   f0_27576(ls_28, l_str2time_60, ls_44, gsa_424[5][2], 5);
   return (1);
}

string f0_27576(string as_0, int ai_8, string as_12, string as_20, int ai_28) {
   int li_32;
   int li_40;
   if (as_20 == gsa_600[8]) {
      gsa_424[ai_28][6] = DoubleToStr(0, 2);
      gsa_424[ai_28][3] = TimeToStr(ai_8);
      gsa_424[ai_28][4] = DoubleToStr(0, 1);
      return (TimeToStr(ai_8));
   }
   int li_36 = StringFind(as_0, as_20);
   if (li_36 == -1) {
      gsa_424[ai_28][6] = DoubleToStr(0, 2);
      gsa_424[ai_28][3] = TimeToStr(ai_8);
      gsa_424[ai_28][4] = DoubleToStr(0, 1);
      gsa_424[ai_28][2] = gsa_600[8];
      li_40 = MessageBoxA(0, f0_91344("Uqsw€4!") + as_20 + f0_91344(gs_656), gs_608 + f0_91344("\"/!Hp|z\"Yjvvjsn{!Kyxwg"), 262272);
      return (TimeToStr(ai_8));
   }
   string ls_44 = StringSubstr(as_0, li_36, 50);
   ls_44 = StringSubstr(ls_44, 0, StringFind(ls_44, gsa_600[2]) + 6);
   if (StringFind(ls_44, "*") != -1) gsa_424[ai_28][5] = gsa_600[9];
   else gsa_424[ai_28][5] = ".";
   string ls_52 = "Mon";
   string ls_60 = "Tue";
   string ls_68 = "Wed";
   string ls_76 = "Thu";
   string ls_84 = "Fri";
   string ls_92 = "Sat";
   string ls_100 = "Sun";
   if (StringFind(as_12, ls_52) != -1) {
      if (StringFind(ls_44, ls_100) != -1) li_32 = -1;
      else {
         if (StringFind(ls_44, ls_52) != -1) li_32 = 0;
         else
            if (StringFind(ls_44, ls_60) != -1) li_32 = 1;
      }
   }
   if (StringFind(as_12, ls_60) != -1) {
      if (StringFind(ls_44, ls_52) != -1) li_32 = -1;
      else {
         if (StringFind(ls_44, ls_60) != -1) li_32 = 0;
         else
            if (StringFind(ls_44, ls_68) != -1) li_32 = 1;
      }
   }
   if (StringFind(as_12, ls_68) != -1) {
      if (StringFind(ls_44, ls_60) != -1) li_32 = -1;
      else {
         if (StringFind(ls_44, ls_68) != -1) li_32 = 0;
         else
            if (StringFind(ls_44, ls_76) != -1) li_32 = 1;
      }
   }
   if (StringFind(as_12, ls_76) != -1) {
      if (StringFind(ls_44, ls_68) != -1) li_32 = -1;
      else {
         if (StringFind(ls_44, ls_76) != -1) li_32 = 0;
         else
            if (StringFind(ls_44, ls_84) != -1) li_32 = 1;
      }
   }
   if (StringFind(as_12, ls_84) != -1) {
      if (StringFind(ls_44, ls_76) != -1) li_32 = -1;
      else {
         if (StringFind(ls_44, ls_84) != -1) li_32 = 0;
         else
            if (StringFind(ls_44, ls_92) != -1) li_32 = 1;
      }
   }
   if (StringFind(as_12, ls_92) != -1) {
      if (StringFind(ls_44, ls_84) != -1) li_32 = -1;
      else {
         if (StringFind(ls_44, ls_92) != -1) li_32 = 0;
         else
            if (StringFind(ls_44, ls_100) != -1) li_32 = 1;
      }
   }
   if (StringFind(as_12, ls_100) != -1) {
      if (StringFind(ls_44, ls_92) != -1) li_32 = -1;
      else {
         if (StringFind(ls_44, ls_100) != -1) li_32 = 0;
         else
            if (StringFind(ls_44, ls_52) != -1) li_32 = 1;
      }
   }
   string ls_ret_108 = StringTrimLeft(StringSubstr(ls_44, StringFind(ls_44, gsa_600[2]) - 2));
   ls_ret_108 = StringSubstr(ls_ret_108, 0, StringFind(ls_ret_108, gsa_600[2]) + 3) + StringSubstr(ls_ret_108, StringLen(ls_ret_108) - 2);
   int li_116 = StrToTime(TimeToStr(gi_500, TIME_DATE) + " " + f0_32892(ls_ret_108)) + gia_604[8] * li_32;
   gsa_424[ai_28][6] = DoubleToStr((li_116 - ai_8 + 0.0) / gia_604[7], 2);
   ls_ret_108 = TimeToStr(li_116);
   gsa_424[ai_28][3] = ls_ret_108;
   gsa_424[ai_28][4] = DoubleToStr(li_32, 1);
   return (ls_ret_108);
}

int SF(string as_0, string as_8) {
   return (StringFind(as_0, as_8));
}

int f0_31796(string as_0) {
   int li_12;
   int li_24;
   int l_global_var_8 = GlobalVariableGet(g_var_name_632);
   if (l_global_var_8 > 0) {
      li_12 = g_str2time_492 - l_global_var_8;
      if (li_12 / gia_604[7] < gia_604[10]) return (0);
   }
   string ls_16 = f0_90588(as_0, gsa_600[137]);
   ls_16 = StringSubstr(ls_16, StringFind(ls_16, f0_91344("0gy9)F\"\"OS32UNVV!Pk|uTffkms")) + 8, 50);
   ls_16 = StringSubstr(ls_16, 0, StringFind(ls_16, f0_91344("0gy9C7b@")));
   GlobalVariableSet(g_var_name_632, g_str2time_492);
   if (ls_16 != gs_608) {
      gi_456 = TRUE;
      if (UpdatePOP) {
         li_24 = MessageBoxA(0, f0_91344("Vjfwl(ju&fp\"Vukiug&fxcjqhjmg\'\x0F\x0C\"!%\'(") + ls_16 + f0_91344("\x0C\x0CXt|te\"tw\"mnrm!vu%fqxsswbf&nvA\x0B%\'(!\"3%rtfxz(zgy1\"ku%~qmn&trgo%€wvt&rcko%izpyyjt"), gs_608 +
            f0_91344("\"/!Zwlbvk%cxbnsicnk"), 262276);
      }
      if (li_24 == gia_604[9]) ShellExecuteA(0, 0, f0_91344("jvuuA70pk|utffkms/{ufcuj4lpytqqce3pv22znqp/hvu0"), "", 0, 5);
   }
   return (1);
}

string f0_32892(string as_0) {
   string ls_8;
   if (StringFind(as_0, gsa_600[10]) != -1 || StringFind(as_0, gsa_600[11]) != -1 || StringFind(as_0, gsa_600[13]) != -1 || StringFind(as_0, gsa_600[14]) != -1 || StringFind(as_0, gsa_600[15]) != -1 ||
      StringFind(as_0, gsa_600[16]) != -1) {
      as_0 = StringSubstr(gsa_600[12] + as_0, StringLen(gsa_600[12] + as_0) - 7);
      ls_8 = StringSubstr(as_0, 0, 2);
      if (StringFind(as_0, gsa_600[10]) != -1 || StringFind(as_0, gsa_600[11]) != -1) {
         if (ls_8 != gsa_600[17]) ls_8 = StrToInteger(ls_8) + 12;
      } else
         if (ls_8 == gsa_600[17]) ls_8 = gsa_600[18];
      as_0 = StringSubstr(ls_8 + StringSubstr(as_0, 2), 0, 5);
   } else as_0 = StringSubstr(gsa_600[12] + as_0, StringLen(gsa_600[12] + as_0) - 5);
   return (as_0);
}

int f0_34260(string as_0) {
   int lia_12[82];
   int lia_16[2];
   int lia_20[4];
   int l_str2time_36;
   int l_global_var_40;
   int li_44;
   int li_56;
   int li_60;
   int li_64;
   int li_68;
   int li_72;
   int li_76;
   int li_unused_80;
   string ls_84;
   string ls_92;
   string ls_100;
   int li_108;
   string ls_112;
   string ls_120;
   if (!gba_592[8]) return (0);
   bool li_8 = FALSE;
   int l_file_24 = FileOpen(g_name_880, FILE_BIN|FILE_READ);
   if (l_file_24 > 0 && !GlobalVariableCheck(g_var_name_840)) {
      for (string ls_28 = ""; !FileIsEnding(l_file_24); ls_28 = ls_28 + FileReadString(l_file_24, gia_604[11])) {
      }
      FileClose(l_file_24);
      l_file_24 = FindFirstFileA(gs_864 + g_name_880, lia_12);
      lia_16[0] = lia_12[5];
      lia_16[1] = lia_12[6];
      if (FileTimeToSystemTime(lia_16, lia_20)) l_str2time_36 = StrToTime(f0_89776(lia_20));
      if (l_file_24 > 0) FindClose(l_file_24);
      gi_504 = l_str2time_36 - 60 * gi_892;
      l_global_var_40 = GlobalVariableGet(g_var_name_832);
      if (l_global_var_40 != gi_504) GlobalVariableSet(g_var_name_832, gi_504);
   } else {
      if (l_file_24 > 0) FileClose(l_file_24);
      ls_28 = f0_90588(as_0, gsa_600[138]);
      if (ls_28 == "") {
         g_time2str_428 = gsa_600[19];
         return (0);
      }
      li_8 = TRUE;
      l_file_24 = FindFirstFileA(gs_864 + g_name_880, lia_12);
      lia_16[0] = lia_12[5];
      lia_16[1] = lia_12[6];
      if (FileTimeToSystemTime(lia_16, lia_20)) l_str2time_36 = StrToTime(f0_89776(lia_20));
      if (l_file_24 > 0) FindClose(l_file_24);
      gi_504 = l_str2time_36 - 60 * gi_892;
      GlobalVariableSet(g_var_name_832, gi_504);
      GlobalVariableDel(g_var_name_840);
   }
   g_time2str_428 = TimeToStr(gi_504, TIME_SECONDS);
   gi_460 = StringFind(ls_28, gs_760);
   gi_464 = StringFind(ls_28, gs_768);
   if (gi_460 != -1) ls_28 = StringSubstr(ls_28, gi_460, StringLen(ls_28));
   if (gi_464 != -1) {
      ls_28 = StringSubstr(ls_28, gi_464, StringLen(ls_28));
      li_44 = gia_604[7] * gia_604[14];
   }
   if (gi_460 == -1 && gi_464 == -1) {
      g_time2str_428 = gsa_600[124];
      DeleteFileA(gs_864 + g_name_880);
      GlobalVariableSet(g_var_name_840, 0);
      return (0);
   }
   ls_28 = StringSubstr(ls_28, 0, StringFind(ls_28, gs_776));
   ArrayResize(gsa_420, gia_604[12]);
   for (l_file_24 = 0; l_file_24 < gia_604[12]; l_file_24++) for (int li_48 = 0; li_48 < 6; li_48++) for (int li_52 = 0; li_52 < 3; li_52++) gsa_420[l_file_24][li_48][li_52] = "";
   while (li_48 != -1) {
      li_48 = StringFind(ls_28, gsa_600[26], li_52);
      if (li_48 == -1) break;
      li_52 = StringFind(ls_28, gsa_600[27], li_48);
      li_60 = StringFind(ls_28, ">", li_52);
      li_56 = li_52 - li_48;
      li_64 = li_60 - li_52;
      li_unused_80 = 0;
      ls_84 = StringTrimRight(StringTrimLeft(StringSubstr(StringSubstr(ls_28, li_48, li_56), 1)));
      ls_92 = StringTrimRight(StringTrimLeft(StringSubstr(StringSubstr(ls_28, li_52, li_64), 1)));
      ls_100 = "";
      if (li_76 == 4) li_108 = 5;
      else li_108 = li_76;
      l_file_24 = SF(ls_92, gs_yqsxl_680);
      if (l_file_24 != -1) gsa_420[li_72][li_108][1] = gsa_600[20];
      l_file_24 = SF(ls_92, gs_dguylz_688);
      if (l_file_24 != -1) gsa_420[li_72][li_108][1] = gsa_600[21];
      l_file_24 = SF(ls_92, gs_696);
      if (l_file_24 != -1) gsa_420[li_72][li_76][1] = gsa_600[22];
      l_file_24 = SF(ls_92, gs_704);
      if (l_file_24 != -1) gsa_420[li_72][li_76][1] = gsa_600[23];
      l_file_24 = SF(ls_92, gs_712);
      if (l_file_24 != -1) gsa_420[li_72][li_76][1] = gsa_600[24];
      l_file_24 = SF(ls_92, gs_720);
      if (l_file_24 != -1) gsa_420[li_72][li_76][1] = gsa_600[25];
      l_file_24 = SF(ls_92, gs_728);
      if (l_file_24 != -1) {
         ls_92 = StringSubstr(ls_92, l_file_24 + 16);
         ls_112 = StringSubstr(ls_92, 0, StringLen(ls_92) - 1);
         gsa_420[li_72][li_76][1] = ls_112;
      }
      l_file_24 = SF(ls_92, gs_736);
      if (l_file_24 != -1) {
         ls_92 = StringSubstr(ls_92, l_file_24 + 38);
         ls_120 = StringSubstr(ls_92, 0, StringLen(ls_92) - 1);
         gsa_420[li_72][li_76 + 1][2] = ls_120;
         li_68++;
      }
      l_file_24 = SF(ls_92, gs_744);
      if (l_file_24 != -1) li_68++;
      l_file_24 = SF(ls_92, gs_752);
      if (l_file_24 != -1) li_68++;
      li_76 = MathMod(li_68 - 2, 6);
      if (StringLen(ls_84) > 0 && StringFind(ls_84, "[") == -1 && StringFind(ls_84, "]") == -1) {
         l_file_24 = StringFind(ls_84, "&lt;");
         if (l_file_24 != -1) ls_84 = "<" + StringSubstr(ls_84, 4);
         ls_100 = ls_84;
         if (li_76 == -2)
            if (StringFind(ls_84, gsa_600[2]) != -1) g_str2time_496 = StrToTime(TimeToStr(gi_504, TIME_DATE) + " " + f0_32892(ls_84));
         if (li_76 == 0) {
            if (StringFind(ls_84, gsa_600[28]) != -1) ls_84 = gsa_600[29];
            else {
               if (StringFind(ls_84, gsa_600[30]) != -1) ls_84 = gsa_600[31];
               else {
                  if (StringFind(ls_84, gsa_600[2]) != -1) ls_84 = TimeToStr(gi_504 + li_44, TIME_DATE) + " " + f0_32892(ls_84);
                  else ls_84 = "...";
               }
            }
            if (gi_888 < StrToInteger(ls_84)) li_72 = -1;
            ls_100 = ls_84;
            li_72++;
         }
         gsa_420[li_72][li_76][0] = ls_100;
      }
   }
   ArrayResize(gsa_420, li_72 + 1);
   if (gsa_600[96] != "100") gi_512 = TRUE;
   if (li_8 && TimeHour(g_str2time_496) != TimeHour(g_str2time_492) && gi_452 != TRUE && gi_516 == FALSE) {
      gi_516 = TRUE;
      l_file_24 = MessageBoxA(0, f0_91344("[qvw\'tpegq\"vjrl(") + TimeToStr(g_str2time_492, TIME_MINUTES) + f0_91344("\x0CHpwl€Gciyqtz%{qng&xgv!yv(") + TimeToStr(g_str2time_496, TIME_MINUTES) + f0_91344("\x0C\x0C!%\'(!/&Rcmf%z}sg&~qw!\'htmq}%eqpppmt$&kqt!yoqt\"}jdujyl)\x0B\"&%\"\"!%\'(!*&wgofrims\"znog!xl|uktlu\"gty(og~y\"wqih|f\"/\x0F\"\"!%\'5!U}nvei%{qng&ktcnjz(uq&zrfbyl(zq{w\"eify|/\x0C\x10Hjcoll(GqxjzHbh{ws{&ykof%zmuvosiu!sv@\x0C&%\"\"!2\'xsgyx\"{fx3(jv&|knm%vxfp&Npvfwumu\"K}rnpwlz"), gs_608 + " - Time Settings Issue", 262276);
      if (l_file_24 == gia_604[9]) ShellExecuteA(0, 0, f0_91344("kgyuswsg4jzg"), f0_91344("jvuuA70y}|0hpwl€gciyqtz3jwn1mzguuhw6qjvDfq>h|{uqstrvjtu{"), 0, 5);
   }
   return (1);
}

void _() {
   int li_4;
   int l_index_8;
   double l_high_32;
   double l_low_40;
   int li_48;
   double ld_56;
   string l_name_64;
   int li_76;
   int l_day_of_week_80;
   int l_shift_84;
   int l_shift_88;
   int li_92;
   double ld_96;
   double ld_104;
   int l_color_112;
   int li_116;
   int lia_120[5];
   string lsa_124[5];
   int l_str2int_168;
   int l_str2int_172;
   int lia_184[5];
   int li_188;
   string ls_192;
   int l_color_200;
   int li_204;
   int li_220;
   int l_color_224;
   int l_count_228;
   int l_color_232;
   string ls_236;
   int l_str2time_244;
   string ls_248;
   string ls_256;
   string ls_264;
   string ls_272;
   string ls_280;
   string ls_288;
   string ls_296;
   string ls_304;
   string ls_312;
   int li_12 = -105;
   int l_objs_total_16 = ObjectsTotal();
   int l_shift_24 = iBarShift(NULL, 0, gi_508, FALSE);
   int li_28 = Time[0] + (Time[0] - Time[1]) * 2;
   if (l_shift_24 > 0) {
      l_high_32 = High[iHighest(NULL, 0, MODE_HIGH, l_shift_24 + 1, 0)];
      l_low_40 = Low[iLowest(NULL, 0, MODE_LOW, l_shift_24 + 1, 0)];
   } else {
      l_high_32 = High[0];
      l_low_40 = Low[0];
   }
   if (gba_592[0]) f0_24720(gsa_600[140] + gsa_600[4], gi_508, l_high_32, li_28, l_low_40, STYLE_SOLID, gia_588[10], 0, FALSE, TRUE);
   if (gba_592[1]) f0_73784(gsa_600[140] + gsa_600[5], gi_508, Open[l_shift_24], li_28, Open[l_shift_24], STYLE_SOLID, gia_588[11], 2, FALSE, FALSE);
   if (gba_592[2]) {
      if (MathMod(MathSqrt(1 / Point), 10) != 0.0) li_48 = 10;
      else li_48 = 1;
      int lia_52[] = {34, 89, 144, 233, 377};
      for (int li_0 = 0; li_0 <= 9; li_0++) {
         l_index_8 = 5 - li_0;
         if (li_0 >= 5) {
            l_index_8--;
            li_4 = (-l_index_8) - 1;
            ld_56 = Open[l_shift_24] - lia_52[li_4] * Point * li_48;
         } else {
            li_4 = l_index_8 - 1;
            ld_56 = Open[l_shift_24] + lia_52[li_4] * Point * li_48;
         }
         f0_73784(gsa_600[140] + gsa_600[6] + " " + l_index_8, gi_508, ld_56, li_28, ld_56, STYLE_SOLID, gia_588[9], 1, FALSE, TRUE);
      }
   }
   if (gd_548 != Open[l_shift_24]) {
      for (li_0 = l_objs_total_16; li_0 >= 0; li_0--) {
         l_name_64 = ObjectName(li_0);
         if (StringFind(l_name_64, gsa_600[142]) != -1) ObjectDelete(l_name_64);
      }
      for (int li_72 = 1; li_72 <= 50; li_72++) {
         li_76 = gi_508 - 86400 * li_72;
         l_day_of_week_80 = TimeDayOfWeek(li_76);
         if (l_day_of_week_80 != 6 && l_day_of_week_80 != 0) {
            l_shift_84 = iBarShift(NULL, 0, li_76, FALSE);
            l_shift_88 = iBarShift(NULL, 0, li_76 + 86400, FALSE);
            li_92 = Time[l_shift_88];
            if (l_shift_84 > 0) {
               ld_96 = High[iHighest(NULL, 0, MODE_HIGH, l_shift_84 - l_shift_88 + 1, l_shift_88)];
               ld_104 = Low[iLowest(NULL, 0, MODE_LOW, l_shift_84 - l_shift_88 + 1, l_shift_88)];
            } else {
               ld_96 = High[l_shift_88];
               ld_104 = Low[l_shift_88];
            }
            if (gba_592[0]) f0_24720(gsa_600[142] + " " + gsa_600[4] + " " + li_72, li_76, ld_96, li_92, ld_104, STYLE_SOLID, gia_588[10], 0, FALSE, TRUE);
            if (gba_592[1]) f0_73784(gsa_600[142] + gsa_600[5] + " " + li_72, li_76, Open[l_shift_84], li_92, Open[l_shift_84], STYLE_SOLID, gia_588[11], 2, FALSE, FALSE);
            if (gba_592[2]) {
               for (li_0 = 0; li_0 <= 9; li_0++) {
                  l_index_8 = 5 - li_0;
                  if (li_0 >= 5) {
                     l_index_8--;
                     li_4 = (-l_index_8) - 1;
                     ld_56 = Open[l_shift_84] - lia_52[li_4] * Point * li_48;
                  } else {
                     li_4 = l_index_8 - 1;
                     ld_56 = Open[l_shift_84] + lia_52[li_4] * Point * li_48;
                  }
                  f0_73784(gsa_600[142] + gsa_600[6] + " " + l_index_8 + " | " + li_72, li_76, ld_56, li_92, ld_56, STYLE_SOLID, gia_588[9], 1, FALSE, TRUE);
               }
            }
         }
      }
      gi_unused_596 = TRUE;
      gd_548 = Open[l_shift_24];
   }
   if (gba_592[4]) {
      if (Close[0] >= Open[l_shift_24]) l_color_112 = Market.Price.UP;
      else l_color_112 = Market.Price.DOWN;
      li_116 = Time[0] + 5 * (Time[0] - Time[1]);
      f0_73784(gsa_600[140] + gsa_600[7] + "1", li_116, l_high_32, li_116, l_low_40, STYLE_SOLID, l_color_112, 1, FALSE, FALSE);
      f0_73784(gsa_600[140] + gsa_600[7] + "2", li_116, Open[l_shift_24], li_116, Close[0], STYLE_SOLID, l_color_112, 3, FALSE, FALSE);
      f0_73784(gsa_600[140] + gsa_600[7] + "O", li_116, Open[l_shift_24] - Point, li_116, Open[l_shift_24] + Point, STYLE_SOLID, l_color_112, 3, FALSE, FALSE);
   }
   lia_120[0] = gi_500 + StrToDouble(gsa_424[1][6]) * gia_604[7];
   gi_524 = gia_468[2] > gia_468[0];
   lia_120[1] = gi_500 + StrToDouble(gsa_424[2][6]) * gia_604[7];
   lia_120[2] = gi_500 + StrToDouble(gsa_424[3][6]) * gia_604[7];
   lia_120[3] = gi_500 + StrToDouble(gsa_424[4][6]) * gia_604[7];
   lia_120[4] = gi_500 + StrToDouble(gsa_424[5][6]) * gia_604[7];
   lsa_124[0] = TimeToStr(lia_120[0], TIME_MINUTES);
   lsa_124[1] = TimeToStr(lia_120[1], TIME_MINUTES);
   lsa_124[2] = TimeToStr(lia_120[2], TIME_MINUTES);
   lsa_124[3] = TimeToStr(lia_120[3], TIME_MINUTES);
   lsa_124[4] = TimeToStr(lia_120[4], TIME_MINUTES);
   string l_time2str_128 = TimeToStr(g_str2time_492, TIME_MINUTES);
   string l_time2str_136 = TimeToStr(g_str2time_496, TIME_MINUTES);
   string l_time2str_144 = TimeToStr(gia_468[2], TIME_MINUTES);
   string l_time2str_152 = TimeToStr(gia_468[2] - Time[0], TIME_MINUTES);
   string ls_160 = TimeSeconds(g_str2time_492) + 100;
   if (gi_512) {
      ArrayResize(gsa_420, 0);
      ArrayResize(gda_556, 0);
   }
   if (gba_592[3]) {
      l_str2int_168 = StrToInteger(ObjectDescription(gs_cpdmvzy_816));
      l_str2int_172 = StrToInteger(ObjectDescription(gs_cpdmvzz_824));
      f0_73140(gsa_600[140] + gsa_600[3], CharToStr(46), 30, gsa_600[32], Red, l_str2int_168, l_str2int_172, gi_308, 180);
   }
   if (gba_592[5]) {
      f0_73140(gsa_600[140] + gsa_600[35], gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 10, gi_308, 0);
      int lia_176[5] = {175, 139, 97, 62, 11};
      int lia_180[5] = {176, 136, 96, 56, 16};
      lia_184[0] = Clock.1.Align;
      lia_184[1] = Clock.2.Align;
      lia_184[2] = Clock.3.Align;
      lia_184[3] = Clock.4.Align;
      lia_184[4] = Clock.5.Align;
      for (li_0 = 0; li_0 <= 4; li_0++) {
         li_188 = ClCL(lia_120[li_0], StrToTime(TimeToStr(lia_120[li_0], TIME_DATE) + " " + gsa_424[li_0 + 1][0]), StrToTime(TimeToStr(lia_120[li_0], TIME_DATE) + " " + gsa_424[li_0 +
            1][1]));
         ls_192 = gsa_600[140] + gsa_600[42] + gsa_424[li_0 + 1][2] + "  " + lsa_124[li_0];
         if (gsa_424[li_0 + 1][5] == gsa_600[9]) l_color_200 = Clock.DayLight.On;
         else l_color_200 = gia_588[12];
         f0_73140(ls_192 + gsa_600[36] + ((li_0 + 1)), CharToStr(110), 5, gsa_600[94], l_color_200, gi_476 + lia_180[li_0], gi_480 + 31, gi_308, 0);
         if (gsa_424[li_0 + 1][2] == gsa_600[8]) li_204 = 255;
         else li_204 = gia_588[12];
         f0_73140(ls_192 + gsa_600[37] + ((li_0 + 1)), CharToStr(110), 5, gsa_600[94], li_204, gi_476 + lia_180[li_0], gi_480 + 36, gi_308, 0);
         f0_73140(ls_192 + gsa_600[38] + ((li_0 + 1)), CharToStr(110), 5, gsa_600[94], gia_588[12], gi_476 + lia_180[li_0], gi_480 + 41, gi_308, 0);
         f0_73140(ls_192 + gsa_600[39] + ((li_0 + 1)), CharToStr(f0_89420(lia_120[li_0])), 20, gsa_600[94], li_188, gi_476 + lia_180[li_0] + 4, gi_480 + 30, gi_308, 0);
         f0_73140(ls_192 + gsa_600[40] + ((li_0 + 1)), gsa_424[li_0 + 1][2], 7, gs_ctjfs_848, li_188, gi_476 + lia_176[li_0] + lia_184[li_0], gi_480 + 22, gi_308, 0);
         f0_73140(ls_192 + gsa_600[41] + ((li_0 + 1)), lsa_124[li_0], 9, gs_ctjfs_848, li_188, gi_476 + lia_180[li_0], gi_480 + 52, gi_308, 0);
      }
      f0_73140(gsa_600[140] + "Line1a", gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 56, gi_308, 0);
   } else li_12 += 46;
   if (gba_592[11]) {
      f0_73140(gsa_600[140] + "lnwrld1", gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 - 49 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[33], CharToStr(251), 114, gsa_600[32], World.Color, gi_476 + 12, gi_480 + (-59) - li_12, gi_308, 0);
      int lia_208[] = {147, 97, 105, 89, 165, 25, 24, 10};
      int lia_212[] = {-36, -43, -43, -43, -43, 7, -36, 7};
      for (li_0 = 0; li_0 <= 9; li_0++) {
         for (li_4 = 1; li_4 <= 5; li_4++) {
            for (l_index_8 = 0; l_index_8 <= 7; l_index_8++) {
               if (li_0 <= MathRound(gda_532[l_index_8] / 100.0) && li_4 < 5) {
                  switch (l_index_8) {
                  case 0:
                  case 2:
                     li_220 = gia_572[li_0];
                     break;
                  case 3:
                  case 4:
                  case 6:
                     li_220 = gia_576[li_0];
                     break;
                  case 5:
                  case 7:
                     li_220 = gia_584[li_0];
                     break;
                  case 1:
                     li_220 = gia_580[li_0];
                  }
               } else {
                  if (li_4 == 5) li_220 = 8421504;
                  else li_220 = 5921370;
               }
               f0_73140(gsa_600[140] + gsa_568[l_index_8] + li_4 + li_0, ".", 14, gs_ctjfs_848, li_220, gi_476 + lia_208[l_index_8] + 1 * (li_4 - 1), gi_480 + lia_212[l_index_8] +
                  (9 - li_0) * 2 - li_12, gi_308, 0);
            }
         }
      }
      f0_73140(gsa_600[140] + "lnwrld2", gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 52 - li_12, gi_308, 0);
   } else li_12 += 101;
   if (gba_592[10]) f0_74112(li_12);
   else li_12 += 54;
   if (gba_592[6]) {
      f0_77336(li_12);
      f0_73140(gsa_600[140] + gsa_600[43], gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 106 - li_12, gi_308, 0);
      if (Open[0] < Close[0]) l_color_224 = Market.Price.UP;
      else {
         if (Open[0] > Close[0]) l_color_224 = Market.Price.DOWN;
         else {
            if (Open[0] == Close[0] && Close[1] < Close[0]) l_color_224 = Market.Price.UP;
            else {
               if (Open[0] == Close[0] && Close[1] > Close[0]) l_color_224 = Market.Price.DOWN;
               else {
                  if (Open[0] == Close[0] && Open[1] < Close[0]) l_color_224 = Market.Price.UP;
                  else {
                     if (Open[0] == Close[0] && Open[1] > Close[0]) l_color_224 = Market.Price.DOWN;
                     else l_color_224 = Currency.Price;
                  }
               }
            }
         }
      }
      f0_73140(gsa_600[140] + gsa_600[44], StringSubstr(Symbol(), 0, 6), 12, gsa_600[34], Currency.Price, gi_476 + 94, gi_480 + 114 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[45], DoubleToStr(Close[0], Digits), 20, gsa_600[34], l_color_224, gi_476 + 94, gi_480 + 126 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[51], gsa_600[56] + DoubleToStr(MarketInfo(Symbol(), MODE_SPREAD), 0) + gsa_600[54] + DoubleToStr(MarketInfo(Symbol(), MODE_SWAPLONG), 2) +
         gsa_600[55] + DoubleToStr(MarketInfo(Symbol(), MODE_SWAPSHORT), 2), 7, gs_ctjfs_848, gia_588[1], gi_476 + 10, gi_480 + 193 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[52], gsa_600[57], 6, gs_ctjfs_848, gia_588[1], gi_476 + 10, gi_480 + 183 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[53], gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 195 - li_12, gi_308, 0);
   } else li_12 += 89;
   if (gba_592[7]) {
      f0_73140(gsa_600[140] + gsa_600[59], gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 195 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[60], l_time2str_128, 20, gsa_600[34], Time.Local, gi_476 + 130, gi_480 + 201 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[61], StringSubstr(ls_160, 1, 2), 10, gs_ctjfs_848, gia_588[5], gi_476 + 82, gi_480 + 208 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[62], gsa_600[65], 7, gs_ctjfs_848, gia_588[5], gi_476 + 42, gi_480 + 209 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[63], l_time2str_144, 7, gs_ctjfs_848, gia_588[5], gi_476 + 10, gi_480 + 209 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[64], f0_92004(TimeDayOfWeek(g_str2time_492)) + ", " + TimeDay(g_str2time_492) + " " + f0_92656(TimeMonth(g_str2time_492)), 7, gs_ctjfs_848, gia_588[5], gi_476 +
         10, gi_480 + 221 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[66], CharToStr(f0_89308(TimeSeconds(g_str2time_492))), 20, gsa_600[94], Time.Minute.clock, gi_476 + 100, gi_480 + 208 - li_12, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_600[67], gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 226 - li_12, gi_308, 0);
   } else li_12 += 31;
   if (gba_592[8] && gba_592[9]) {
      l_count_228 = 0;
      if (gi_504 + gia_604[6] * (gia_604[6] / 2) <= g_str2time_492) {
         GlobalVariableSet(g_var_name_840, 0);
         g_time2str_428 = gsa_600[68];
      }
      for (li_0 = 1; li_0 <= ArrayRange(gsa_420, 0) - 1; li_0++) {
         l_color_232 = gia_588[0];
         ls_236 = gsa_420[li_0][0][0];
         l_str2time_244 = StrToTime(ls_236);
         ls_248 = gsa_600[69];
         if (gsa_420[li_0][1][0] != "") ls_248 = gsa_420[li_0][1][0];
         ls_256 = gsa_600[69];
         if (gsa_420[li_0][1][1] != "") ls_256 = gsa_420[li_0][1][1];
         ls_264 = gsa_600[69];
         if (gsa_420[li_0][2][0] != "") ls_264 = gsa_420[li_0][2][0];
         ls_272 = gsa_600[69];
         if (gsa_420[li_0][3][0] != "") ls_272 = gsa_420[li_0][3][0];
         ls_280 = gsa_600[69];
         if (gsa_420[li_0][4][0] != "") ls_280 = gsa_420[li_0][4][0];
         ls_288 = gsa_600[69];
         if (gsa_420[li_0][5][0] != "") ls_288 = gsa_420[li_0][5][0];
         ls_296 = gsa_600[69];
         if (gsa_420[li_0][5][2] != "") ls_296 = gsa_420[li_0][5][2];
         if (StringFind(News.Currencies, ls_248) != -1) {
            l_count_228++;
            if (l_str2time_244 > g_str2time_492 && gi_460 != -1) {
               l_color_232 = News.UpComming;
               if (l_str2time_244 - g_str2time_492 <= News.UpCWarn.Minute * gia_604[6]) l_color_232 = News.UpCWarn.Color;
            }
            if (l_str2time_244 <= g_str2time_492 && l_str2time_244 + 5 * gia_604[6] >= g_str2time_492 && gi_460 != -1) l_color_232 = Red;
            if (StringFind(ls_236, gsa_600[2]) != -1 && l_str2time_244 <= g_str2time_492 && ls_288 != gsa_600[69] && ls_272 == gsa_600[69] && gi_504 + gia_604[6] / 2 <= g_str2time_492) {
               GlobalVariableSet(g_var_name_840, 0);
               g_time2str_428 = gsa_600[87];
            }
            if (StringFind(ls_236, gsa_600[2]) != -1) ls_236 = TimeToStr(l_str2time_244, TIME_MINUTES);
            ls_304 = gsa_600[140] + gsa_600[42] + ls_236 + gsa_600[70] + ls_248 + gsa_600[70] + ls_256 + gsa_600[42] + StringSubstr(ls_264, 0, 30);
            ls_312 = gsa_600[140] + gsa_600[42] + ls_236 + gsa_600[70] + ls_248 + gsa_600[83] + ls_272 + gsa_600[84] + ls_280 + gsa_600[85] + ls_288 + gsa_600[86] + ls_296;
            f0_73140(gsa_600[82] + ls_304, ls_236, 7, gs_ctjfs_848, l_color_232, gi_476 + 181, gi_480 + 126 + 13 * (l_count_228 + 9) - li_12, gi_308, 0);
            l_color_232 = gia_588[0];
            if (gsa_420[li_0][1][1] == gsa_600[22]) l_color_232 = gia_588[8];
            if (gsa_420[li_0][1][1] == gsa_600[23]) l_color_232 = gia_588[7];
            if (gsa_420[li_0][1][1] == gsa_600[24]) l_color_232 = gia_588[6];
            if (gsa_420[li_0][1][1] == gsa_600[25]) l_color_232 = News.Info;
            if (News.Set <= 1) {
               f0_73140(gsa_600[77] + ls_304, ls_248, 7, gs_ctjfs_848, l_color_232, gi_476 + 157, gi_480 + 126 + 13 * (l_count_228 + 9) - li_12, gi_308, 0);
               l_color_232 = gia_588[0];
               f0_73140(gsa_600[78] + ls_304, StringTrimRight(StringTrimRight(StringSubstr(ls_264, 0, 8))), 7, gs_ctjfs_848, l_color_232, gi_476 + 104, gi_480 + 126 + 13 * (l_count_228 +
                  9) - li_12, gi_308, 0);
               l_color_232 = gia_588[0];
               if (gsa_420[li_0][3][1] == gsa_600[20]) l_color_232 = gia_588[3];
               if (gsa_420[li_0][3][1] == gsa_600[21]) l_color_232 = gia_588[4];
               f0_73140(gsa_600[79] + ls_312, ls_272, 7, gs_ctjfs_848, l_color_232, gi_476 + 75, gi_480 + 126 + 13 * (l_count_228 + 9) - li_12, gi_308, 0);
               l_color_232 = gia_588[0];
               if (gsa_420[li_0][4][1] == gsa_600[20]) l_color_232 = gia_588[3];
               if (gsa_420[li_0][4][1] == gsa_600[21]) l_color_232 = gia_588[4];
               f0_73140(gsa_600[80] + ls_312, ls_280, 7, gs_ctjfs_848, l_color_232, gi_476 + 43, gi_480 + 126 + 13 * (l_count_228 + 9) - li_12, gi_308, 0);
               l_color_232 = gia_588[0];
               if (gsa_420[li_0][5][1] == gsa_600[20]) l_color_232 = gia_588[3];
               if (gsa_420[li_0][5][1] == gsa_600[21]) l_color_232 = gia_588[4];
               f0_73140(gsa_600[81] + ls_312, ls_288, 7, gs_ctjfs_848, l_color_232, gi_476 + 12, gi_480 + 126 + 13 * (l_count_228 + 9) - li_12, gi_308, 0);
               l_color_232 = gia_588[0];
            }
            if (News.Set >= 2) {
               f0_73140(gsa_600[77] + ls_304, ls_248, 7, gs_ctjfs_848, l_color_232, gi_476 + 156, gi_480 + 126 + 13 * (l_count_228 + 9) - li_12, gi_308, 0);
               l_color_232 = gia_588[0];
               f0_73140(gsa_600[78] + ls_304, StringTrimRight(StringTrimRight(StringSubstr(ls_264, 0, 25))), 7, gs_ctjfs_848, l_color_232, gi_476 + 23, gi_480 + 126 + 13 * (l_count_228 +
                  9) - li_12, gi_308, 0);
               l_color_232 = gia_588[0];
               if (gsa_420[li_0][3][1] == gsa_600[20]) l_color_232 = gia_588[3];
               if (gsa_420[li_0][3][1] == gsa_600[21]) l_color_232 = gia_588[4];
               f0_73140(gsa_600[79] + ls_312, CharToStr(110), 8, gsa_600[94], l_color_232, gi_476 + 12, gi_480 + 127 + 13 * (l_count_228 + 9) - li_12, gi_308, 0);
               l_color_232 = gia_588[0];
            }
         }
      }
      f0_73140(gsa_600[140] + gsa_600[71], gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 120 + 13 * (l_count_228 + 1 + 9) - li_12, gi_308, 0);
   }
   f0_73140(gsa_600[140] + gsa_600[72], gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 226 - li_12, gi_308, 0);
   if (gi_464 != -1) f0_73140(gsa_600[140] + gsa_600[73], gsa_600[74], 7, gs_ctjfs_848, Red, gi_476 + 164, gi_480 + 239 - li_12, gi_308, 0);
   else f0_73140(gsa_600[140] + gsa_600[73], g_time2str_428, 7, gs_ctjfs_848, Red, gi_476 + 168, gi_480 + 239 - li_12, gi_308, 0);
   if (gi_456 == FALSE) f0_73140(gsa_600[140] + gsa_600[75], gs_608, 7, gs_ctjfs_848, C'0x50,0x50,0x50', gi_476 + 12, gi_480 + 239 - li_12, gi_308, 0);
   else f0_73140(gsa_600[140] + gsa_600[75], f0_91344("KP25[QPP&Zrfbyl(bxgnnccql"), 7, gs_ctjfs_848, Red, gi_476 + 12, gi_480 + 239 - li_12, gi_308, 0);
   f0_73140(gsa_600[140] + gsa_600[76], gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 241 - li_12, gi_308, 0);
}

void f0_73140(string a_name_0, string a_text_8, int a_fontsize_16, string a_fontname_20, color a_color_28, int a_x_32, int a_y_36, int a_corner_40, int a_angle_44) {
   ObjectCreate(a_name_0, OBJ_LABEL, 0, 0, 0);
   ObjectSet(a_name_0, OBJPROP_XDISTANCE, a_x_32);
   ObjectSet(a_name_0, OBJPROP_YDISTANCE, a_y_36);
   ObjectSet(a_name_0, OBJPROP_BACK, FALSE);
   ObjectSet(a_name_0, OBJPROP_CORNER, a_corner_40);
   ObjectSet(a_name_0, OBJPROP_ANGLE, a_angle_44);
   ObjectSetText(a_name_0, a_text_8, a_fontsize_16, a_fontname_20, a_color_28);
}

void f0_73528(string a_name_0, string a_text_8, int a_fontsize_16, string a_fontname_20, color a_color_28, int a_datetime_32, double a_price_36, int a_angle_44) {
   ObjectCreate(a_name_0, OBJ_TEXT, 0, a_datetime_32, a_price_36);
   ObjectSet(a_name_0, OBJPROP_BACK, FALSE);
   ObjectSet(a_name_0, OBJPROP_ANGLE, a_angle_44);
   ObjectSetText(a_name_0, a_text_8, a_fontsize_16, a_fontname_20, a_color_28);
}

void f0_73784(string a_name_0, int a_datetime_8, double a_price_12, int a_datetime_20, double a_price_24, int a_style_32, int a_color_36, int a_width_40, int a_bool_44, int a_bool_48) {
   ObjectCreate(a_name_0, OBJ_TREND, 0, a_datetime_8, a_price_12, a_datetime_20, a_price_24);
   ObjectSet(a_name_0, OBJPROP_STYLE, a_style_32);
   ObjectSet(a_name_0, OBJPROP_COLOR, a_color_36);
   ObjectSet(a_name_0, OBJPROP_WIDTH, a_width_40);
   ObjectSet(a_name_0, OBJPROP_RAY, a_bool_44);
   ObjectSet(a_name_0, OBJPROP_BACK, a_bool_48);
}

void f0_74112(int ai_0) {
   int li_8;
   int li_unused_4 = 0;
   for (int l_count_12 = 0; l_count_12 <= 7; l_count_12++) {
      for (int l_index_16 = 0; l_index_16 <= 9; l_index_16++) {
         for (int li_20 = 1; li_20 <= 10; li_20++) {
            if (l_index_16 <= MathRound((gda_536[7 - l_count_12]) / 100.0) && li_20 == 1 || li_20 == 2 || li_20 == 3) li_8 = gia_584[l_index_16];
            else {
               if (l_index_16 <= MathRound((gda_540[7 - l_count_12]) / 100.0) && li_20 == 4 || li_20 == 5 || li_20 == 6) li_8 = gia_572[l_index_16];
               else {
                  if (l_index_16 <= MathRound((gda_544[7 - l_count_12]) / 100.0) && li_20 == 7 || li_20 == 8 || li_20 == 9) li_8 = gia_576[l_index_16];
                  else {
                     if (l_index_16 <= MathRound((gda_532[7 - l_count_12]) / 100.0) && li_20 == 10) li_8 = 13882323;
                     else li_8 = 3289650;
                  }
               }
            }
            f0_73140(gsa_600[140] + gsa_600[88] + li_20 + l_count_12 + l_index_16, gsa_600[89], 18, gs_ctjfs_848, li_8, gi_476 + 8 + (li_20 - 1) * 2 + 25 * l_count_12, gi_480 +
               47 + 3 * (9 - l_index_16) - ai_0, gi_308, 0);
         }
      }
   }
   int lia_24[] = {185, 160, 135, 110, 85, 60, 37, 11};
   int lia_28[] = {188, 163, 138, 113, 88, 63, 39, 13};
   for (l_index_16 = 0; l_index_16 <= 7; l_index_16++) {
      f0_73140(gsa_600[140] + gsa_568[l_index_16], gsa_568[l_index_16], 7, gs_ctjfs_848, TrendBar.Currency, gi_476 + lia_24[l_index_16], gi_480 + 104 - ai_0, gi_308, 0);
      f0_73140(gsa_600[140] + gsa_568[l_index_16] + gsa_600[90], DoubleToStr(gda_536[l_index_16] / 100.0, 1), 7, gs_ctjfs_848, TrendBar.Value, gi_476 + lia_28[l_index_16], gi_480 +
         95 - ai_0, gi_308, 0);
   }
   f0_73140(gsa_600[140] + gsa_600[91], gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 106 - ai_0, gi_308, 0);
   f0_73140(gsa_600[140] + "lntrnd1", gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 52 - ai_0, gi_308, 0);
}

void f0_77336(int ai_0) {
   int li_24;
   int li_32;
   int li_36;
   int li_40;
   int lia_44[7];
   double l_imacd_52;
   double l_imacd_60;
   double l_irsi_68;
   double l_istochastic_76;
   double l_icci_84;
   double l_ima_92;
   double l_ima_100;
   double l_ima_108;
   int li_120;
   int li_128;
   int li_132;
   double ld_136;
   int lia_4[] = {5, 15, 25, 35, 45, 55, 65, 75, 85, 95};
   int lia_8[] = {1, 15, 30, 60, 240, 1440, 10080, 43200};
   int lia_12[] = {193, 181, 167, 151, 137, 123, 109, 94};
   int lia_16[] = {10, 4, 2, 0};
   int lia_20[9] = {13882323, 13882323, 13882323, 65280, 255, 255, 65535, 3947580, 3289650};
   int lia_28[7] = {384, 192, 96, 48, 24, 12, 4};
   ArrayInitialize(lia_44, 0);
   for (int l_index_48 = 0; l_index_48 <= 7; l_index_48++) {
      l_imacd_52 = iMACD(NULL, lia_8[l_index_48], 12, 24, 8, PRICE_CLOSE, MODE_MAIN, 0);
      l_imacd_60 = iMACD(NULL, lia_8[l_index_48], 12, 24, 8, PRICE_CLOSE, MODE_SIGNAL, 0);
      l_irsi_68 = iRSI(NULL, lia_8[l_index_48], 14, PRICE_CLOSE, 0);
      l_istochastic_76 = iStochastic(NULL, lia_8[l_index_48], 5, 3, 3, MODE_SMA, 0, MODE_MAIN, 0);
      l_icci_84 = iCCI(NULL, lia_8[l_index_48], 14, PRICE_TYPICAL, 0);
      l_ima_92 = iMA(NULL, lia_8[l_index_48], 4, 0, MODE_EMA, PRICE_CLOSE, 0);
      l_ima_100 = iMA(NULL, lia_8[l_index_48], 8, 0, MODE_EMA, PRICE_CLOSE, 0);
      l_ima_108 = iMA(NULL, lia_8[l_index_48], 12, 0, MODE_EMA, PRICE_CLOSE, 0);
      for (int l_index_116 = 0; l_index_116 <= 9; l_index_116++) {
         if (l_index_48 <= 4 && l_index_116 <= 6) {
            li_120 = -1;
            li_120 = ArrayBsearch(lia_4, iStochastic(NULL, lia_8[l_index_48], lia_28[l_index_116], 1, 1, MODE_LWMA, 0, MODE_SIGNAL, 0), WHOLE_ARRAY, 0, 0);
            for (int l_index_124 = 0; l_index_124 <= 9; l_index_124++) {
               if (l_index_116 > 2) {
                  if (l_index_116 > 3) li_128 = 4;
                  else li_128 = 2;
               } else li_128 = 0;
               if (l_index_124 == li_120) li_24 = lia_20[l_index_116];
               else {
                  if (l_index_116 == 3) li_24 = lia_20[7];
                  else li_24 = lia_20[8];
               }
               f0_73140(gsa_600[140] + gsa_600[92] + l_index_48 + l_index_116 + l_index_124, gsa_600[89], 18, gs_ctjfs_848, li_24, gi_476 + 8 + (l_index_48 - 0) * 2 + 11 * l_index_116 +
                  li_128, gi_480 + 144 + (9 - l_index_124) * 2 - ai_0, gi_308, 0);
               if (l_index_48 <= 3 && l_index_116 <= 3) {
                  if (l_index_116 > 1) li_128 = 1;
                  else li_128 = 0;
                  if (gi_472 != -1) {
                     if (l_index_124 < gda_556[lia_16[l_index_116]] || (l_index_124 == gda_556[lia_16[l_index_116]] && gda_556[lia_16[l_index_116]] == 9.0)) li_24 = gia_572[l_index_124];
                     else {
                        if (l_index_124 >= gda_556[lia_16[l_index_116]] || (l_index_124 == gda_556[lia_16[l_index_116]] && gda_556[lia_16[l_index_116]] == 0.0)) li_24 = gia_576[9 - l_index_124];
                        else li_24 = 3289650;
                     }
                  } else li_24 = 3289650;
                  f0_73140(gsa_600[140] + gsa_600[93] + l_index_48 + l_index_116 + l_index_124, gsa_600[89], 18, gs_ctjfs_848, li_24, gi_476 + 68 + (9 - l_index_124) * 2, gi_480 + 100 +
                     (l_index_48 - 0) * 2 + 10 * l_index_116 + li_128 - ai_0, gi_308, 0);
               }
            }
            lia_44[6 - l_index_116] += li_120;
         }
         if (l_index_116 > 4) {
            li_128 = 1;
            li_132 = 10;
         } else {
            li_128 = 0;
            li_132 = 0;
         }
         li_32 = 0;
         li_36 = 0;
         li_40 = 0;
         if (l_imacd_52 > l_imacd_60) {
            if (l_imacd_52 >= 0.0) {
               li_24 = gia_572[5];
               li_32 = 1;
            } else {
               li_24 = gia_572[2];
               li_32 = 0;
            }
         } else {
            if (l_imacd_52 <= 0.0) {
               li_24 = gia_576[5];
               li_32 = 2;
            } else {
               li_24 = gia_576[2];
               li_32 = 0;
            }
         }
         f0_73140(gsa_600[140] + gsa_600[125] + l_index_48 + l_index_116, gsa_600[89], 22, gs_ctjfs_848, li_24, gi_476 + 199 - 14 * l_index_48 - l_index_116 * 2 + li_132, gi_480 +
            145 - ai_0 + li_128, gi_308, 0);
         li_24 = gia_584[4];
         if (l_irsi_68 > 50.0 && l_istochastic_76 > 40.0 && l_icci_84 > 0.0) {
            li_24 = gia_572[5];
            li_36 = 1;
         }
         if (l_irsi_68 < 50.0 && l_istochastic_76 < 60.0 && l_icci_84 < 0.0) {
            li_24 = gia_576[5];
            li_36 = 2;
         }
         f0_73140(gsa_600[140] + gsa_600[126] + l_index_48 + l_index_116, gsa_600[89], 22, gs_ctjfs_848, li_24, gi_476 + 199 - 14 * l_index_48 - l_index_116 * 2 + li_132, gi_480 +
            150 - ai_0 + li_128, gi_308, 0);
         if (l_ima_92 > l_ima_100) {
            if (l_ima_108 >= l_ima_100) {
               li_24 = gia_572[2];
               li_40 = 0;
            } else {
               li_24 = gia_572[5];
               li_40 = 1;
            }
         } else {
            if (l_ima_108 < l_ima_100) {
               li_24 = gia_576[2];
               li_40 = 0;
            } else {
               li_24 = gia_576[5];
               li_40 = 2;
            }
         }
         f0_73140(gsa_600[140] + gsa_600[127] + l_index_48 + l_index_116, gsa_600[89], 22, gs_ctjfs_848, li_24, gi_476 + 199 - 14 * l_index_48 - l_index_116 * 2 + li_132, gi_480 +
            155 - ai_0 + li_128, gi_308, 0);
         if (gi_528) {
            if (li_32 == 1 && li_36 == 1 && li_40 == 1) gda_560[l_index_48 + 8] = 1;
            else {
               if (li_32 == 2 && li_36 == 2 && li_40 == 2) gda_560[l_index_48 + 8] = 2;
               else gda_560[l_index_48 + 8] = 0;
            }
         }
      }
      f0_73140(gsa_600[140] + ((gsa_600[l_index_48 + 128])), gsa_600[l_index_48 + 128], 6, gs_ctjfs_848, gia_588[1], gi_476 + lia_12[l_index_48], gi_480 + 160 - ai_0, gi_308, 0);
   }
   f0_73140(gsa_600[140] + " SigIn", gsa_600[141], 6, gs_ctjfs_848, gia_588[1], gi_476 + 95, gi_480 + 183 - ai_0, gi_308, 0);
   if (gi_528) {
      ld_136 = lia_44[0] / 5.0;
      if (ld_136 >= 6.0) gda_560[16] = 1;
      else {
         if (ld_136 <= 3.0) gda_560[16] = 2;
         else gda_560[16] = 0;
      }
      ld_136 = (lia_44[1] / 5.0 + lia_44[2] / 5.0) / 2.0;
      if (ld_136 >= 6.0) gda_560[17] = 1;
      else {
         if (ld_136 <= 3.0) gda_560[17] = 2;
         else gda_560[17] = 0;
      }
      ld_136 = lia_44[3] / 5.0;
      if (ld_136 >= 6.0) gda_560[18] = 1;
      else {
         if (ld_136 <= 3.0) gda_560[18] = 2;
         else gda_560[18] = 0;
      }
      ld_136 = (lia_44[4] / 5.0 + lia_44[5] / 5.0 + lia_44[6] / 5.0) / 3.0;
      if (ld_136 >= 6.0) gda_560[19] = 1;
      else {
         if (ld_136 <= 3.0) gda_560[19] = 2;
         else gda_560[19] = 0;
      }
   }
   if (gi_472 != -1) {
      f0_73140(gsa_600[140] + "PY1", DoubleToStr(MathRound(gda_556[11]), 0) + gsa_600[2] + DoubleToStr(MathRound(gda_556[12]), 0), 7, gs_ctjfs_848, LightGray, gi_476 + 53, gi_480 +
         117 - ai_0, gi_308, 0);
      f0_73140(gsa_600[140] + "PY2", DoubleToStr(MathRound(gda_556[5]), 0) + gsa_600[2] + DoubleToStr(MathRound(gda_556[6]), 0), 7, gs_ctjfs_848, LightGray, gi_476 + 53, gi_480 +
         127 - ai_0, gi_308, 0);
      f0_73140(gsa_600[140] + "PX1", DoubleToStr(MathRound(gda_556[2]), 0) + gsa_600[2] + DoubleToStr(MathRound(9 - gda_556[2]), 0), 7, gs_ctjfs_848, LightGray, gi_476 +
         53, gi_480 + 139 - ai_0, gi_308, 0);
      f0_73140(gsa_600[140] + "PX2", DoubleToStr(MathRound(gda_556[0]), 0) + gsa_600[2] + DoubleToStr(MathRound(9 - gda_556[0]), 0), 7, gs_ctjfs_848, LightGray, gi_476 +
         53, gi_480 + 149 - ai_0, gi_308, 0);
   }
   string ls_144 = "________________";
   f0_73140(gsa_600[140] + "lc1", ls_144, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 128 - ai_0, gi_308, 0);
   f0_73140(gsa_600[140] + "lc2", gs_856, 7, gs_ctjfs_848, gia_588[2], gi_476 + 10, gi_480 + 150 - ai_0, gi_308, 0);
   f0_73140(gsa_600[140] + "ci1a", "Cluster", 7, gs_ctjfs_848, gia_588[1], gi_476 + 10, gi_480 + 117 - ai_0, gi_308, 0);
   f0_73140(gsa_600[140] + "ci1b", "strength", 7, gs_ctjfs_848, gia_588[1], gi_476 + 10, gi_480 + 125 - ai_0, gi_308, 0);
   f0_73140(gsa_600[140] + "ci2a", "Pair", 7, gs_ctjfs_848, gia_588[1], gi_476 + 10, gi_480 + 138 - ai_0, gi_308, 0);
   f0_73140(gsa_600[140] + "ci2b", "balance", 7, gs_ctjfs_848, gia_588[1], gi_476 + 10, gi_480 + 146 - ai_0, gi_308, 0);
}

int f0_89308(int ai_0) {
   ai_0 = MathFloor(ai_0 / 5);
   return (gia_488[ai_0]);
}

int f0_89420(int ai_0) {
   int li_4 = TimeHour(ai_0);
   if (li_4 >= 12) li_4 -= 12;
   return (gia_488[li_4]);
}

int ClCL(int ai_0, int ai_4, int ai_8) {
   int l_color_12;
   int l_day_of_week_16 = TimeDayOfWeek(ai_0);
   if (ai_0 >= ai_4 && ai_0 <= ai_8 && l_day_of_week_16 != 6 && l_day_of_week_16 != 0) l_color_12 = Clock.Open;
   else l_color_12 = gia_588[12];
   return (l_color_12);
}

string f0_89776(int aia_0[4]) {
   int li_4 = aia_0[0] & 65535;
   int li_8 = aia_0[0] >> 16;
   int li_12 = aia_0[1] >> 16;
   int li_16 = aia_0[2] & 65535;
   int li_20 = aia_0[2] >> 16;
   int li_24 = aia_0[3] & 65535;
   string ls_28 = li_8 + 100;
   ls_28 = StringSubstr(ls_28, 1);
   string ls_36 = li_12 + 100;
   ls_36 = StringSubstr(ls_36, 1);
   string ls_44 = li_16 + 100;
   ls_44 = StringSubstr(ls_44, 1);
   string ls_52 = li_20 + 100;
   ls_52 = StringSubstr(ls_52, 1);
   string ls_60 = li_24 + 100;
   ls_60 = StringSubstr(ls_60, 1);
   return (StringConcatenate(li_4, ".", ls_28, ".", ls_36, " ", ls_44, ":", ls_52, ":", ls_60));
}

string f0_90588(string as_0, string as_8) {
   int l_file_48;
   int lia_32[] = {5};
   int li_40 = DeleteUrlCacheEntry(as_0);
   int li_44 = URLDownloadToFileA(0, as_0, gs_864 + gsa_600[139] + as_8, 0, 0);
   if (li_44 != 0) {
      l_file_48 = FileOpen(gsa_600[139] + as_8, FILE_BIN|FILE_WRITE|FILE_READ);
      FileSeek(l_file_48, 0, SEEK_END);
      FileWriteString(l_file_48, ">", 1);
      FileClose(l_file_48);
   }
   l_file_48 = FileOpen(gsa_600[139] + as_8, FILE_BIN|FILE_READ);
   for (string ls_ret_52 = ""; !FileIsEnding(l_file_48); ls_ret_52 = ls_ret_52 + FileReadString(l_file_48, gia_604[11])) {
   }
   if (l_file_48 > 0) FileClose(l_file_48);
   return (ls_ret_52);
}

string f0_91344(string as_0) {
   int li_8 = gia_604[27];
   for (int li_12 = gia_604[28]; li_12 < StringLen(as_0); li_12++) {
      as_0 = StringSetChar(as_0, li_12, StringGetChar(as_0, li_12) - gia_604[li_8]);
      li_8++;
      if (li_8 == gia_604[26]) li_8 = gia_604[27];
   }
   return (as_0);
}

int f0_91740(string as_0) {
   for (int li_8 = gia_604[30]; li_8 <= gia_604[29]; li_8++)
      if (as_0 == gsa_600[li_8]) return (li_8 - gia_604[30]);
   return (0);
}

string f0_92004(int ai_0) {
   return (gsa_600[gia_604[31] + ai_0]);
}

void f0_92100() {
   string lsa_0[];
   int lia_16[];
   int li_4 = ArraySize(gsa_600) - 1;
   ArrayResize(lsa_0, li_4 + 1);
   for (int l_index_8 = 0; l_index_8 <= li_4; l_index_8++) lsa_0[l_index_8] = gsa_600[li_4 - l_index_8];
   int li_12 = ArrayCopy(gsa_600, lsa_0);
   ArrayResize(lsa_0, 0);
   li_4 = ArraySize(gia_604) - 1;
   ArrayResize(lia_16, li_4 + 1);
   for (l_index_8 = 0; l_index_8 <= li_4; l_index_8++) lia_16[l_index_8] = gia_604[li_4 - l_index_8];
   ArrayCopy(gia_604, lia_16);
   ArrayResize(lia_16, 0);
}

string f0_92656(int ai_0) {
   return (gsa_600[gia_604[32] + ai_0]);
}
